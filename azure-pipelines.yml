# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- master
stages:
- stage: 'Build_Stage' #Stage name cannot have spaces
  displayName: 'Build' #Name displayed when viewing in Azure DevOps
  jobs:
  - job: 'Build_Job' #Job name cannot have spaces
    displayName: 'Application Build' #Name displayed when viewing in Azure DevOps
    pool:
      name: ProjectPool
  
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: "Install node version 14"
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: '$(build.sourcesdirectory)'
      displayName: "Install npm"


    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(build.sourcesdirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/bootcamp.zip'
        replaceExistingArchive: true
      displayName: "Creating zip file and moving to agent's Artifact directory from source"

      
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/bootcamp.zip' 
        artifactName: 'bootcamp-app'
      displayName: 'Publish Artifact'
      
    


- stage: 'Staging' #Stage name cannot have spaces
  displayName: 'Staging' #Name displayed when viewing in Azure DevOps
  dependsOn: ['Build_Stage'] #List of previous stages that must complete before this stage runs
  jobs:
  - deployment: Deploy_Staging #No spaces
    displayName: Staging Deployment #Name displayed in UI
    pool:
      name: ProjectPool 
    environment: Staging
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'bootcamp-app'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: ExtractFiles@1
            displayName: 'Extract files'
            inputs:
              archiveFilePatterns: "$(Pipeline.Workspace)/bootcamp-app/bootcamp.zip"
              destinationFolder: "$(Pipeline.Workspace)/files/"

          - task: CmdLine@2
            inputs:
              script: |
                git clone https://github.com/GuyR53/AnsibleWeek6Code.git
          
          - task: Ansible@0
            inputs:
              ansibleInterface: 'agentMachine'
              playbookPathOnAgentMachine: 'AnsibleWeek6Code/main_playbook.yml'
              inventoriesAgentMachine: 'file'
              inventoryFileOnAgentMachine: 'AnsibleWeek6Code/inventories/stage'
              args: '--extra-vars server_env_group="stageservers"'
          
          